2.	Write a C program for monoalphabetic substitution cipher maps a plaintext alphabet to a ciphertext alphabet, 
so that each letter of the plaintext alphabet maps to a single unique letter of the ciphertext alphabet.

PROGRAM :-

class MonoalphabeticCipher:
    def __init__(self, key=None):
        if key:
            self.key = key.upper()
        else:
            self.key = 'ZYXWVUTSRQPONMLKJIHGFEDCBA'  # Default key as reverse alphabet

    def encrypt(self, plaintext):
        plaintext = plaintext.upper()
        ciphertext = ''

        for char in plaintext:
            if char.isalpha():
                idx = ord(char) - ord('A')
                ciphertext += self.key[idx]
            else:
                ciphertext += char

        return ciphertext

    def decrypt(self, ciphertext):
        plaintext = ''

        for char in ciphertext:
            if char.isalpha():
                idx = self.key.index(char)
                plaintext += chr(idx + ord('A'))
            else:
                plaintext += char

        return plaintext

# Example usage
key = "KJFABSWVURMTOHECXDYPLQGNIZ"  # You can provide your own key here
cipher = MonoalphabeticCipher(key)

plaintext = input("Enter the text:")
encrypted_text = cipher.encrypt(plaintext)
print("Encrypted:", encrypted_text)

decrypted_text = cipher.decrypt(encrypted_text)
print("Decrypted:", decrypted_text)
