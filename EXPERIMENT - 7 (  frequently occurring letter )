7.	Write a C program for the following ciphertext was generated using a simple substitution algorithm. 
53‡‡†305))6*;4826)4‡.)4‡);806*;48†8¶60))85;;]8*;:‡*8†83(88)5*†;46(;88*96*?;8)*‡(;485);5*†2:*‡(;4956*2(5*—4)8¶8*
;4069285);)6†8)4‡‡;1(‡9;48081;8:8‡1;48†85;4)485†528806*81 (‡9;48;(88;4(‡?34;48)4‡;161;:188;‡?;

Decrypt this message.
1.	As you know, the most frequently occurring letter in English is e. Therefore, the first or second (or perhaps third?) most common character in the message 
is likely to stand for e. Also, e is often seen in pairs (e.g., meet, fleet, speed, seen, been,
agree, etc.). Try to find a character in the ciphertext that decodes to e.
2.	The most common word in English is “the.” Use this fact to guess the characters that stand for t and h.
3.	Decipher the rest of the message by deducing additional words.

PROGRAM :-

def decrypt_substitution(ciphertext, substitution_mapping):
    decrypted_text = ""
    for char in ciphertext:
        if char in substitution_mapping:
            decrypted_text += substitution_mapping[char]
        else:
            decrypted_text += char
    return decrypted_text

def main():
    ciphertext = "53‡‡†305))6*;4826)4‡.)4‡);806*;48†8¶60))85;;]8*;:‡*8†83 (88)5*†;46(;88*96*?;8)*‡(;485);5*†2:*‡(;4956*2(5*—4)8¶8* ;4069285);)6†8)4‡‡;1(‡9;48081;8:8‡1;48†85;4)485†528806*81 (‡9;48;(88;4(‡?34;48)4‡;161;:188;‡?"
    
    # Create a hypothetical substitution mapping based on observed characters
    substitution_mapping = {
        "5": "H",
        "3": "E",
        "‡": "L",
        "†": "O",
        "0": "W",
        "(": "R",
        ")": "D",
        ";": " ",
        "*": "N",
        "4": "A",
        "8": "G",
        "6": "C",
        "2": "T",
        "[": "I",
        ":": "V",
        "—": "U",
        "1": "F",
        "?": "Y",
        "]": "M",
        ":": "V",
        "‡": "L",
        "8": "G",
        "¶": "P",
        "?": "Y",
        "!": "S",
    }
    
    decrypted_text = decrypt_substitution(ciphertext, substitution_mapping)
    print("Decrypted text:", decrypted_text)

if __name__ == "__main__":
    main()
